package com.pointlion.sys.mvc.common.model;

import java.util.List;

import com.jfinal.aop.Before;
import com.jfinal.kit.StrKit;
import com.jfinal.plugin.activerecord.Page;
import com.jfinal.plugin.activerecord.tx.Tx;
import com.pointlion.sys.mvc.common.model.base.BaseScore;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class Score extends BaseScore<Score> {

	public final static Score dao = new Score();
	
	public List<Score> getScoreList(String topicid, String userid){
		return Score.dao.find("select * from t_score where topicid='"+topicid+"' and userid='"+userid+"'");
	}

	/**
	 * 获得分页数据
	 */
	public Page<Score> getScorePage(Integer curr, Integer pagesize, String Searcht, String orgid, String orgids) {
		if (StrKit.isBlank(Searcht) && StrKit.isBlank(orgid)) {
			return Score.dao.paginate(curr, pagesize, "select s.*,o.name orgname ", " from t_score s left join sys_user u on s.userid=u.id left join sys_org o on u.orgid=o.id where o.id in ("+orgids+") order by s.score desc,s.createtime desc");
		} else {
			String where = "where o.id in ("+orgids+") ";
			if(StrKit.notBlank(Searcht))
				where += " and (t.name like '%"+Searcht+"%' or u.name like '%"+Searcht+"%' or ul.name like '%"+Searcht+"%')";
			if(StrKit.notBlank(orgid))
				where += " and o.id='"+orgid+"' ";
			return Score.dao.paginate(curr, pagesize, "select s.*,o.name orgname",
					" from t_score s left join t_topic t on s.topicid=t.id left join sys_user u on s.userid=u.id left join sys_org o on u.orgid=o.id LEFT JOIN sys_user ul ON s.personid = ul.id "+where+" order by s.score desc,s.createtime desc");
		}
	}
	
	/**
	 * 获得专家分页数据
	 */
	public Page<Score> getScoreZjPage(Integer curr, Integer pagesize, String Searcht, String orgid, String orgids) {
		if (StrKit.isBlank(Searcht) && StrKit.isBlank(orgid)) {
			return Score.dao.paginate(curr, pagesize, "select s.*,o.name orgname ", " from t_score s left join sys_user u on s.userid=u.id left join sys_org o on u.orgid=o.id where o.id in ("+orgids+") and s.personid is not null order by s.score desc,s.createtime desc");
		} else {
			String where = "where o.id in ("+orgids+") and s.personid is not null";
			if(StrKit.notBlank(Searcht))
				where += " and (t.name like '%"+Searcht+"%' or u.name like '%"+Searcht+"%' or ul.name like '%"+Searcht+"%')";
			if(StrKit.notBlank(orgid))
				where += " and o.id='"+orgid+"' ";
			return Score.dao.paginate(curr, pagesize, "select s.*,o.name orgname",
					" from t_score s left join t_topic t on s.topicid=t.id left join sys_user u on s.userid=u.id left join sys_org o on u.orgid=o.id LEFT JOIN sys_user ul ON s.personid = ul.id "+where+" order by s.score desc,s.createtime desc");
		}
	}
	
	/**
	 * 获得分页数据(查下自己的数据)
	 */
	public Page<Score> getScoreNotNullPage(Integer curr, Integer pagesize, String Searcht, String orgid, String orgids, String userid) {
		if (StrKit.isBlank(Searcht) && StrKit.isBlank(orgid)) {
			return Score.dao.paginate(curr, pagesize, "select s.*,o.name orgname ", " from t_score s left join sys_user u on s.userid=u.id left join sys_org o on u.orgid=o.id where o.id in ("+orgids+") and s.userid = '"+userid+"' and s.marktime is not null order by s.score desc,s.createtime desc");
		}else{
			String where = "where o.id in ("+orgids+") and s.userid = '"+userid+"' and s.marktime is not null";
			if(StrKit.notBlank(Searcht))
				where += " and CONCAT(t.name,u.name,ul.name) like concat('%', '" + Searcht + "','%')";
			if(StrKit.notBlank(orgid))
				where += " and o.id='"+orgid+"' ";
			return Score.dao.paginate(curr, pagesize, "select s.*,o.name orgname ",
					" FROM t_score s LEFT JOIN t_topic t ON s.topicid = t.id LEFT JOIN sys_user u ON s.userid = u.id LEFT JOIN sys_user ul ON s.personid = ul.id LEFT JOIN sys_org o ON u.orgid = o.id "+where+" order by s.score desc,s.createtime desc");
		}
	}
	
	/**
	 * 获得分页数据(管理员查询他人数据)
	 */
	public Page<Score> getScoreNotNullPage(Integer curr, Integer pagesize, String Searcht, String orgid, String orgids) {
		if (StrKit.isBlank(Searcht) && StrKit.isBlank(orgid)) {
			return Score.dao.paginate(curr, pagesize, "select s.*,o.name orgname ", " from t_score s left join sys_user u on s.userid=u.id left join sys_org o on u.orgid=o.id where o.id in ("+orgids+") and s.marktime is not null order by s.score desc,s.createtime desc");
		}else{
			String where = "where o.id in ("+orgids+") and s.marktime is not null";
			if(StrKit.notBlank(Searcht))
				where += " and CONCAT(t.name,u.name,ul.name) like concat('%', '" + Searcht + "','%')";
			if(StrKit.notBlank(orgid))
				where += " and o.id='"+orgid+"' ";
			return Score.dao.paginate(curr, pagesize, "select s.*,o.name orgname ",
					" FROM t_score s LEFT JOIN t_topic t ON s.topicid = t.id LEFT JOIN sys_user u ON s.userid = u.id LEFT JOIN sys_user ul ON s.personid = ul.id LEFT JOIN sys_org o ON u.orgid = o.id "+where+" order by s.score desc,s.createtime desc");
		}
	}

	/***
	 * 删除
	 * 
	 * @param ids
	 */
	@Before(Tx.class)
	public void deleteByIds(String ids) {
		String idarr[] = ids.split(",");
		for (String id : idarr) {
			Score template = Score.dao.findById(id);
			template.delete();
		}
	}
}
