package com.pointlion.sys.mvc.common.model;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.jfinal.aop.Before;
import com.jfinal.plugin.activerecord.Page;
import com.jfinal.plugin.activerecord.tx.Tx;
import com.pointlion.sys.mvc.common.model.base.BaseTopicDelay;
import com.pointlion.sys.mvc.common.utils.DateUtils;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class TopicDelay extends BaseTopicDelay<TopicDelay> {

	public final static TopicDelay dao = new TopicDelay();

	/**
	 * 获得分页数据
	 */
	public Page<TopicDelay> getDelayByPage(Integer curr, Integer pagesize, Integer stat) {
		return TopicDelay.dao.paginate(curr, pagesize, "select *",
				" from t_topic_delay where 1=1 "+ (stat!=null?" and stat="+stat:"")+ " order by id desc");
	}
	
	/**
	 * 获取全部数据
	 */
	public List<TopicDelay> getDelay(Integer stat) {
		return findByList("select * from t_topic_delay where 1=1 "+ (stat!=null?" and stat="+stat:"")+ " order by id desc");
	}
	
	/**
	 * 查询统一做数据处理
	 * @title findByList
	 * @param sql
	 * @return
	 */
	public List<TopicDelay> findByList(String sql){
		List<TopicDelay> list = TopicDelay.dao.find(sql);
		if(list!=null && list.size()>0){
			for (TopicDelay d : list) {
				if(d.getStat()==1 && System.currentTimeMillis()>DateUtils.convert2YMdhmsTime(d.getYqendTime()).getTime()){
					d.setStat(2);
					d.update();
				}
			}
		}
		return list;
	}
	
	public TopicDelay find(String topicid, String userid){
		List<TopicDelay> list = findByList("select * from t_topic_delay where topicid='"+topicid+"' and userid='"+userid+"'");
		if(list!=null && list.size()>0){
			return list.get(0);
		}else{
			return null;
		}
	}
	
	/**
	 * 返回Map格式获取数据，
	 * @title getDelayToMap<key:"考核id-用户id",value:TopicDelay>
	 * @param stat
	 * @return
	 */
	public Map<String, TopicDelay> getDelayToMap(Integer stat){
		Map<String, TopicDelay> map = new HashMap<String, TopicDelay>();
		List<TopicDelay> list = findByList("select * from t_topic_delay where 1=1 "+ (stat!=null?" and stat="+stat:"")+ " order by id desc");
		if(list!=null && list.size()>0){
			for (TopicDelay d : list) {
				map.put(d.getTopicId()+"-"+d.getUserId(), d);
			}
		}
		return map;
	}

	/***
	 * 删除
	 * 
	 * @param ids
	 */
	@Before(Tx.class)
	public void deleteByIds(String ids) {
		String idarr[] = ids.split(",");
		for (String id : idarr) {
			TopicDelay topic = TopicDelay.dao.findById(id);
			topic.delete();
		}
	}

	/***
	 * 启用/禁用
	 * 
	 * @param ids
	 */
	@Before(Tx.class)
	public void statusByIds(String ids, Integer stat) {
		String idarr[] = ids.split(",");
		for (String id : idarr) {
			TopicDelay topic = TopicDelay.dao.findById(id);
			topic.setStat(stat);
			topic.update();
		}
	}
}