package com.pointlion.sys.mvc.common.model;

import java.util.List;

import com.jfinal.aop.Before;
import com.jfinal.kit.StrKit;
import com.jfinal.plugin.activerecord.Page;
import com.jfinal.plugin.activerecord.tx.Tx;
import com.pointlion.sys.mvc.common.model.base.BaseAnswer;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class Answer extends BaseAnswer<Answer> {

	public final static Answer dao = new Answer();

	/**
	 * 获得分页数据
	 */
	public Page<Answer> getAnswerPage(Integer curr, Integer pagesize) {
		return Answer.dao.paginate(curr, pagesize, "select * ", " from t_answer");
	}
	
	/**
	 * 获得分页数据
	 */
	public List<Answer> getAnswerBynotPersion() {
		return Answer.dao.find("SELECT * FROM t_answer WHERE personid IS NULL");
	}
	
	/**
	 * 获得分页数据
	 */
	public Page<Answer> getAnswerPage(Integer curr, Integer pagesize, String Searcht, String orgids, String isperson) {
		if (StrKit.isBlank(Searcht) && "1".equals(isperson)) {
			return Answer.dao.paginate(curr, pagesize, "SELECT s.*, o.NAME orgname ", " FROM t_answer s LEFT JOIN sys_user u ON s.personid = u.id LEFT JOIN sys_org o ON u.orgid = o.id where o.id in ("+orgids+") order by s.createtime desc");
		} else {
			String where = "where 1=1 ";
			if("0".equals(isperson)){
				where += " and s.personid is null";
			}else{
				where += "and o.id in ("+orgids+") ";
			}
			if(StrKit.notBlank(Searcht))
				where += " and (s.code like '%"+Searcht+"%' or s.code like '%"+Searcht+"%')";
			return Answer.dao.paginate(curr, pagesize, "select s.*,o.name orgname",
					" FROM t_answer s LEFT JOIN t_topic t ON s.topicid = t.id LEFT JOIN sys_user u ON s.personid = u.id LEFT JOIN sys_org o ON u.orgid = o.id "+where+" order by s.createtime desc");
		}
	}
	
	
	/**
	 * 获得分页数据
	 */
	public Page<Answer> getAnswerPages(Integer curr, Integer pagesize, String Searcht, String orgids, String evaluates) {
		if (StrKit.isBlank(Searcht) && "1".equals(evaluates)) {
			return Answer.dao.paginate(curr, pagesize, "SELECT s.*, o.NAME orgname ", " FROM t_answer s LEFT JOIN sys_user u ON s.personid = u.id LEFT JOIN sys_org o ON u.orgid = o.id where o.id in ("+orgids+") and s.evaluate in ('未审核') order by s.createtime desc");
		} 
		if (StrKit.isBlank(Searcht) && "".equals(evaluates)) {
			return Answer.dao.paginate(curr, pagesize, "SELECT s.*, o.NAME orgname ", " FROM t_answer s LEFT JOIN sys_user u ON s.personid = u.id LEFT JOIN sys_org o ON u.orgid = o.id where o.id in ("+orgids+") order by s.createtime desc");
		}else {
			String where = "where 1=1 ";

			return Answer.dao.paginate(curr, pagesize, "select s.*,o.name orgname",
					" FROM t_answer s LEFT JOIN t_topic t ON s.topicid = t.id LEFT JOIN sys_user u ON s.personid = u.id LEFT JOIN sys_org o ON u.orgid = o.id "+where+" and s.evaluate not in ('未审核') order by s.createtime desc");
		}
	}
	
	/**
	 * 获得分页数据
	 */
	public Page<Answer> getAnswerLookPage(Integer curr, Integer pagesize, String Searcht, String orgids) {
		String where = "where evaluate!='未审核' ";
		where += "and o.id in ("+orgids+") ";
		if(StrKit.notBlank(Searcht))
			where += " and (s.code like '%"+Searcht+"%' or s.code like '%"+Searcht+"%')";
		return Answer.dao.paginate(curr, pagesize, "select s.*,o.name orgname",
				" FROM t_answer s LEFT JOIN t_topic t ON s.topicid = t.id LEFT JOIN sys_user u ON s.personid = u.id LEFT JOIN sys_org o ON u.orgid = o.id "+where+" order by s.createtime desc");
	}
	
	/**
	 * 获得分页数据
	 */
	public Page<Answer> getAnswerPage(Integer curr, Integer pagesize, String Searcht, String orgids) {
		String where = "where evaluate = '验收通过' ";
		where += "and o.id in ("+orgids+") ";
		if(StrKit.notBlank(Searcht))
			where += " and (s.code like '%"+Searcht+"%' or s.code like '%"+Searcht+"%')";
		return Answer.dao.paginate(curr, pagesize, "select s.*,o.name orgname",
				" FROM t_answer s LEFT JOIN t_topic t ON s.topicid = t.id LEFT JOIN sys_user u ON s.personid = u.id LEFT JOIN sys_org o ON u.orgid = o.id "+where+" order by s.createtime desc");
	}
	
	/**
	 * 获得分页数据
	 */
	public List<Answer> getAnswerList(String topicid, String userid) {
		return Answer.dao.find("select * from t_answer where topicid = '" + topicid + "' and personid ='" + userid + "'");
	}
	
	/**
	 * 获得分页数据
	 */
	public Page<Answer> getAnswerPage(Integer curr, Integer pagesize, String topicid) {
		return Answer.dao.paginate(curr, pagesize, "select * ", " from t_answer where topicid = '" + topicid + "'");
	}
	
	/**
	 * 获得分页数据
	 */
	public Page<Answer> getAnswerByquestion(Integer curr, Integer pagesize, String questionid, String userid) {
		return Answer.dao.paginate(curr, pagesize, "select * ",
				" from t_answer where questionid = '" + questionid + "' and personid ='" + userid + "'");
	}
	
	/**
	 * 获得分页数据
	 */
	public Page<Answer> getAnswerPageByUser(Integer curr, Integer pagesize, String topicid, String userid) {
		return Answer.dao.paginate(curr, pagesize, "select * ", " from t_answer where topicid = '" + topicid + "' and personid ='" + userid + "'");
	}
	
	/**
	 * 根据code查询Answer
	 * @param fid
	 * @return
	 */
	public Answer getAnswerByCode(String code){
		return Answer.dao.findFirst("select * from t_answer where code ='"+code+"'");
	}
	
	/**
	 * 根据fid查询Answer
	 * @param fid
	 * @return
	 */
	public Answer getAnswerByFid(String fid){
		List<Answer> list = Answer.dao.find("select * from t_answer where fid ='"+fid+"'");
		if(list!=null && list.size()>0){
			return list.get(0);
		}else{
			return null;
		}
	}

	/***
	 * 删除
	 * 
	 * @param ids
	 */
	@Before(Tx.class)
	public void deleteByIds(String ids) {
		String idarr[] = ids.split(",");
		for (String id : idarr) {
			Answer answer = Answer.dao.findById(id);
			answer.delete();
		}
	}
}