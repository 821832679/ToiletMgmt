package com.pointlion.sys.mvc.common.model;

import java.util.List;

import com.jfinal.aop.Before;
import com.jfinal.kit.StrKit;
import com.jfinal.plugin.activerecord.Page;
import com.jfinal.plugin.activerecord.tx.Tx;
import com.pointlion.sys.mvc.common.model.base.BaseTopic;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class Topic extends BaseTopic<Topic> {

	public final static Topic dao = new Topic();
	
	public List<Topic> getlist()
	{
		return Topic.dao.find("select * from t_topic where status = 1");		
	}

	/**
	 * 获得分页数据
	 */
	public Page<Topic> getTopicPage(Integer curr, Integer pagesize, String Statustype, String Searcht, String orgids) {
		if (StrKit.isBlank(Searcht)) {
			if (StrKit.isBlank(Statustype)) {
				return Topic.dao.paginate(curr, pagesize, "select t.*,u.name username,o.name orgname,e.name typename ",
						" from t_topic  t left join sys_user u on t.userid=u.id left join sys_org o on u.orgid=o.id left join t_topic_type e on e.id=t.typeid where o.id in ("
								+ orgids + ") order by t.sortvalue desc,t.createtime desc");
			}
		} else {
			if (StrKit.notBlank(Statustype)) {
				return Topic.dao.paginate(curr, pagesize, "select t.*,u.name username,o.name orgname,e.name typename ",
						" from t_topic t left join sys_user u on t.userid=u.id left join sys_org o on u.orgid=o.id left join t_topic_type e on e.id=t.typeid where o.id in ("
								+ orgids + ") and CONCAT(t.name,t.describle) like concat('%', '" + Searcht
								+ "','%') and t.status = '" + Statustype + "' order by sortvalue desc,createtime desc");
			}
			return Topic.dao.paginate(curr, pagesize, "select t.*,u.name username,o.name orgname,e.name typename ",
					" from t_topic t left join sys_user u on t.userid=u.id left join sys_org o on u.orgid=o.id left join t_topic_type e on e.id=t.typeid where o.id in ("
							+ orgids + ") and CONCAT(t.name,t.describle) like concat('%', '" + Searcht
							+ "','%') order by t.sortvalue desc,t.createtime desc");
		}
		return Topic.dao.paginate(curr, pagesize, "select t.*,u.name username,o.name orgname,e.name typename ",
				" from t_topic t left join sys_user u on t.userid=u.id left join sys_org o on u.orgid=o.id left join t_topic_type e on e.id=t.typeid where o.id in ("
						+ orgids + ") and t.status = '" + Statustype + "' order by t.sortvalue desc,t.createtime desc");
	}

	/**
	 * 获得分页数据
	 */
	public Page<Topic> getTopicByStatusPage(Integer curr, Integer pagesize, String Searcht, String orgids) {
		if (StrKit.isBlank(Searcht)) {
			return Topic.dao.paginate(curr, pagesize, "select s.*,u.name username,o.name orgname ",
					" from t_topic s left join sys_user u on s.userid=u.id left join sys_org o on u.orgid=o.id where o.id in ("
							+ orgids + ") and s.status='1' order by s.sortvalue desc,s.createtime desc");
		} else {
			return Topic.dao.paginate(curr, pagesize, "select s.*,u.name username,o.name orgname",
					" from t_topic s left join sys_user u on s.userid=u.id left join sys_org o on u.orgid=o.id where o.id in ("
							+ orgids + ") and CONCAT(s.name,s.describle) like concat('%', '" + Searcht
							+ "','%') and s.status='1' order by s.sortvalue desc,s.createtime desc");
		}
	}

	/***
	 * 删除
	 * 
	 * @param ids
	 */
	@Before(Tx.class)
	public void deleteByIds(String ids) {
		String idarr[] = ids.split(",");
		for (String id : idarr) {
			Topic topic = Topic.dao.findById(id);
			topic.delete();
		}
	}

	/***
	 * 启用/禁用
	 * 
	 * @param ids
	 */
	@Before(Tx.class)
	public void statusByIds(String ids, String status) {
		String idarr[] = ids.split(",");
		for (String id : idarr) {
			Topic topic = Topic.dao.findById(id);
			topic.setStatus(status);
			topic.update();
		}
	}
}