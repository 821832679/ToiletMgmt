package com.pointlion.sys.mvc.common.model;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.jfinal.aop.Before;
import com.jfinal.kit.StrKit;
import com.jfinal.plugin.activerecord.Page;
import com.jfinal.plugin.activerecord.tx.Tx;
import com.pointlion.sys.mvc.common.model.base.BaseQuestion;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class Question extends BaseQuestion<Question> {

	public final static Question dao = new Question();
	
	/**
	 * 获取指标集合
	 * @title getQuestionAllByMap
	 * @return
	 */
	public Map<String, Question> getQuestionAllByMap(){
		Map<String, Question> map = new HashMap<String, Question>();
        List<Question> qList = Question.dao.find("select * from t_question");
        for (Question q : qList) {
        	map.put(q.getId(), q);
		}
        return map;
	}
	
	public Question getQuestionFirstByTopicid(String topicid){
        return Question.dao.findFirst("select * from t_question where topicid = '"+topicid+"'");
	}

	/**
	 * 获得分页数据
	 */
	public Page<Question> getQuestionPage(Integer curr, Integer pagesize, String topicid, String Statustype, String Searcht) {
		if (StrKit.isBlank(Searcht)) {
			if (StrKit.isBlank(Statustype)) {
				return Question.dao.paginate(curr, pagesize, "select * ",
						" from t_question where topicid = '" + topicid + "' order by sortvalue asc");
			}
		} else {
			if (StrKit.notBlank(Statustype)) {
				return Question.dao.paginate(curr, pagesize, "select *",
						" from t_question where describle like concat('%', '" + Searcht + "','%') and status = '" + Statustype + "' and topicid = '" + topicid + "' order by sortvalue asc");
			}
			return Question.dao.paginate(curr, pagesize, "select *",
					" from t_question where describle like concat('%', '" + Searcht + "','%') and topicid = '" + topicid + "' order by sortvalue asc");
		}
		return Question.dao.paginate(curr, pagesize, "select * ",
				" from t_question where status = '" + Statustype + "' and topicid = '" + topicid + "' order by sortvalue asc");
	}
	
	/**
	 * 获得分页数据
	 */
	public Page<Question> getQuestionBySstatusPage(Integer curr, Integer pagesize, String topicid) {
		if (topicid != null && !"".equals(topicid)) {
			return Question.dao.paginate(curr, pagesize, "select * ",
					" from t_question where topicid = '" + topicid + "' and status = '1' order by sortvalue asc");
		}
		return Question.dao.paginate(curr, pagesize, "select * ", " from t_question where status = '1' order by sortvalue asc");
	}

	/***
	 * 删除
	 * 
	 * @param ids
	 */
	@Before(Tx.class)
	public void deleteByIds(String ids) {
		String idarr[] = ids.split(",");
		for (String id : idarr) {
			Question template = Question.dao.findById(id);
			template.delete();
		}
	}
	
	/***
	 * 启用/禁用
	 * 
	 * @param ids
	 */
	@Before(Tx.class)
	public void statusByIds(String ids, String status) {
		String idarr[] = ids.split(",");
		for (String id : idarr) {
			Question question = Question.dao.findById(id);
			question.setStatus(status);
			question.update();
		}
	}
}
